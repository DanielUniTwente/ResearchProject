flows:
  greet_user:
    description: "Greets the user back"
    steps:
      - action: "utter_greet"
      - link: "choose_painting"

  # restart_conversation:
  #   description: "resets the conversation"
  #   if: False
  #   # nlu_trigger:
  #   #   - intent: stop_discussion
  #   steps:
  #     - action: "utter_finish_discussion"
  #     - action: "action_reset_conversation"

  # stop_switch_discussion:
  #   description: "The user wants to stop discussing the current painting and the assistance asks if they want to continue discussing another painting or stop the conversation altogether" 
  #   # nlu_trigger:
  #   #   - intent: switch_painting
  #   steps:
  #     - id: "continue"
  #       collect: "continue_discussion"
  #       ask_before_filling: true
  #       utter: utter_ask_continue_discussion
  #       next:
  #         - if: "slots.continue_discussion"
  #           then: "clear_slots"
  #         - else: "stop_discussion"
  #     - id: "clear_slots"
  #       action: "action_reset_known_objects"
  #       next: "choose_painting"
  #     - id: "choose_painting"
  #       link: "choose_painting"
  #     - id: "stop_discussion"
  #       link: "restart_conversation"
      #   next:
      #     - if: "slots.continue_discussion"
      #       then: "choose_painting"
      #     - else: "stop_discussion"
      # - id: "choose_painting"
      #   link: "choose_painting"
      # - id: "stop_discussion"
      #   link: "stop_discussion"

  # stop_discussion:
  #   description: "The user wants to stop the discussion altogether and the assistant confirms this and ends the conversation" 
  #   # nlu_trigger:
  #   #   - intent: switch_painting
  #   steps:
  #     - id: "continue"
  #       collect: "continue_discussion"
  #       ask_before_filling: true
  #       utter: utter_ask_continue_discussion
  #       next:
  #         - if: "slots.continue_discussion"
  #           then: "clear_slots"
  #         - else: "stop_discussion"
  #     - id: "clear_slots"
  #       action: "action_reset_known_objects"
  #       next: "choose_painting"
  #     - id: "choose_painting"
  #       link: "choose_painting"
  #     - id: "stop_discussion"
  #       link: "restart_conversation"

  switch_painting:
    description: "The user wants to switch to discussing another painting"
    # nlu_trigger:
    #   - intent: switch_painting
    steps:
        - action: "action_reset_known_objects"
        - link: "choose_painting"

  choose_painting:
    description: "Prompts the user to choose a painting from a list of 4"
    if: False
    steps:
      - collect: "active_painting"
        ask_before_filling: true
        reset_after_flow_ends: false
      - set_slots:
          - image_url: active_painting
          - stage: "observation"
      - action: "utter_lets_start"
      - link: "observation"

  observation:
    description: "User and assistant disscuss simple observations about the chosen painting, until they have gone over all objects in the painting"
    if: "slots.active_painting and slots.stage == 'observation'"
    steps:
      - id: "set_stage"
        set_slots:
          - stage: "observation"
          - no_objects: False
        next: "loop"
      - id: "loop"
        collect: "observation"
        ask_before_filling: true
        utter: action_send_to_api
        next:
          - if: "slots.no_objects"
            then: "no_more_observation"
          - else: "loop"
      - id: "no_more_observation"
        set_slots:
          - stage: "describe story"
        next: "next_stage"
      - id: "next_stage"
        link: "describe_story"

  describe_story:
    description: "User is asked to create a narrative about their chosen painting, until they have no more to add to the story"
    if: "slots.active_painting and slots.stage == 'describe story'"
    steps:
      - id: "set_stage"
        set_slots:
          - stage: "describe story"
          - no_objects: False
        next: "loop"
      - id: "loop"
        collect: "observation"
        ask_before_filling: true
        utter: action_send_to_api
        next:
          - if: "slots.no_objects"
            then: "no_more_observation"
          - else: "loop"
      - id: "no_more_observation"
        set_slots:
          - stage: "describe author technique"
        next: "next_stage"
      - id: "next_stage"
        link: "describe_author_technique"

  describe_author_technique:
    description: "User is asked to describe the author's technique in their chosen painting, until they have covered all techniques they can think of"
    if: "slots.active_painting and slots.stage == 'describe author technique'"
    steps:
      - id: "set_stage"
        set_slots:
          - stage: "describe author technique"
          - no_objects: False
        next: "loop"
      - id: "loop"
        collect: "observation"
        ask_before_filling: true
        utter: action_author_technique_api
        next:
          - if: "slots.no_objects"
            then: "no_more_observation"
          - else: "loop"
      - id: "no_more_observation"
        set_slots:
          - stage: "describe interpretation"
        next: "next_stage"
      - id: "next_stage"
        link: "describe_interpretation"

  describe_interpretation:
    description: "Asks the user to describe how they interpret their current painting"
    if: "slots.active_painting and slots.stage == 'describe interpretation'"
    steps:
      - id: "set_stage"
        set_slots:
          - stage: "describe interpretation"
        next: "ask_interpretation"
      - id: "ask_interpretation"
        collect: "current_interpretation"
        ask_before_filling: true
        reset_after_flow_ends: false
        utter: action_interpretation_api
        next:
          - if: "slots.no_more"
            then: "choose_next"
          - else: "ask_interpretation"
      - id: "choose_next"
        link: "summary"


  summary:
    description: "Summarizes the user's observations and feelings about the painting"
    if: False
    steps:
      - set_slots:
            - stage: "summary"
      - action: action_summarize
      - link: "next_painting"

  next_painting:
    description: "Prompts the user to choose the next painting"
    if: False
    steps:
      - id: "set_last_active_painting"
        set_slots:
          - last_active_painting: "active_painting"
        next: "send_interpretation_to_database"
      - id: "send_interpretation_to_database"
        action: "action_send_interpretation_to_database"
        next: "move_on"
      - id: "move_on"
        action: "utter_lets_move_on"
        next: "choose_painting"
      - id: "choose_painting"
        link: "choose_painting"

  pattern_search:
    description: handle a knowledge-based question or request
    name: pattern search
    steps:
      - action: action_give_description
  
  pattern_chitchat:
    description: handle interactions with the user that are not related discussing art
    name: pattern chitchat
    steps:
        - action: "utter_out_of_scope"

  pattern_skip_question:
    description: Conversation repair flow for managing user intents to skip questions (steps)
    name: pattern skip question
    steps:
      - action: action_give_description

  pattern_cancel_flow:
    description: A meta flow that's started when a flow is cancelled.
    if: False
    steps:
      - id: "continue"
        collect: "continue_discussion"
        ask_before_filling: true
        utter: utter_ask_continue_discussion
        next:
          - if: "slots.continue_discussion"
            then: "keep_going"
          - else: "stop_discussion"
      - id: "keep_going"
        action: "utter_lets_continue"
        next: END
      - id: "stop_discussion"
        action: "utter_finish_discussion"
        next: "restart_conversation"
      - id: "restart_conversation"
        action: "action_reset_conversation"
        next: END

